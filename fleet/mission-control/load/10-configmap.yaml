apiVersion: v1
kind: ConfigMap
metadata:
  name: mission-control-probe-code
  namespace: default
data:
  scenario.ts: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';

    export let options = {
      vus: 1,
      stages: [
        { duration: '2m', target: 0 },
        { duration: '30s', target: 4 },
        { duration: '2h', target: 4 }, // long enough for lab to continue running.
      ],
    };

    export default function () {
      let res = http.get('http://frontend-service.mission-control.svc.cluster.local:8080/api/gravity');
      check(res, { 'Gravity operational': (r) => r.status === 200 });
      let res = http.get('http://frontend-service.mission-control.svc.cluster.local:8080/api/airlock');
      check(res, { 'Airlock operational': (r) => r.status === 200 });
      let res = http.get('http://frontend-service.mission-control.svc.cluster.local:8080/api/life-support');
      check(res, { 'Life Support operational': (r) => r.status === 200 });
      let res = http.get('http://frontend-service.mission-control.svc.cluster.local:8080/api/power-core/all');
      check(res, { 'Power Cores operational': (r) => r.status === 200 });
      sleep(1);
    }
